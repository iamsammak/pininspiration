sam's notes

npm install --save webpack react react-dom redux react-redux babel-core babel-loader babel-preset-react babel-preset-es2015 lodash


Here's a Rails/React/Redux setup checklist. It should only serve as a reminder. Ask a TA if you don't understand why you're configuring something on this list.

git init
    Update your .gitignore.
      node_modules/
      bundle.js
      bundle.js.map

git remote add the proper remote.
    git push -u the remote.

rails new
    Add --database=postgresql if using Postgres.
    Add --skip-turbolinks to skip the turbolinks gem.

Update your Gemfile.
    better_errors
    binding_of_caller
    pry-rails
    annotate

bundle install

npm init --yes to create a package.json file with the default setup.

Create a frontend folder at the root of your project with an entry file inside of it.

npm install --save
    webpack
    react
    react-dom
    react-router
    redux
    react-redux
    babel-core
    babel-loader
    babel-preset-react
    babel-preset-es2015

Create a webpack.config.js file.
    The entry point should be in frontend, e.g. entry: 'frontend/index.jsx'.
    The output path should be 'app/assets/javascripts'.
    Configure your module.loaders to use Babel transpilation for:
    JSX
    ES6
    Include devtool: 'source-map'.

git commit again (Verify that your .gitignore works).
    git push your skeleton.



-----------------------------------
Copy & Paste below for template: webpack.config.js
DON'T FORGET TO CHANGE entry, output path

const path = require('path');

module.exports = {
  context: __dirname,
  entry: './frontend/pokedex.jsx',
  output: {
    path: path.join(__dirname, 'app', 'assets', 'javascripts'),
    filename: 'bundle.js'
  },
  resolve: {
    extensions: ['', '.js', '.jsx']
  },
  module: {
    loaders: [
      {
        test: /\.jsx?$/,
        exclude: /(node_modules|bower_components)/,
        loader: 'babel',
        query: {
          presets: ['react', 'es2015']
        }
      }
    ]
  },
  devtool: 'source-maps'
};


Now that Webpack knows to create bundle.js, require it in our application.js:

//= require jquery_ujs
//= require bundle
